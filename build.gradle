group='com.github.evotor'
version 'v1.1.1'

buildscript {
    ext.kotlin_version = '1.1.2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.yaml:snakeyaml:1.17'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    // Build as a plugin
    compile gradleApi()
    compile localGroovy()

    // Zip
    compile 'org.rauschig:jarchivelib:0.7.1'

    // YAML parsing
    compile 'org.yaml:snakeyaml:1.17'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
sourceSets {
    main.java.srcDirs += 'src/main/groovy'
}

ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

publishing {
    publications {

        maven(MavenPublication) {
            groupId 'com.github.evotor'
            artifactId "template-plugin"
            version "v1.1.1"
            artifact "$buildDir/libs/${project.getName()}-${version}.jar"

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    if (dependency.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }
}


